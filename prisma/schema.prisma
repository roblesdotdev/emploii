// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(cuid())
  username  String    @unique
  email     String    @unique
  password  Password?
  orgs      Org[]
  admin     Admin?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Admin {
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Password {
  user   User   @relation(references: [id], fields: [userId], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
  hash   String
}

model Org {
  slug String @unique
  name String

  user        User         @relation(references: [id], fields: [userId], onDelete: Cascade, onUpdate: Cascade)
  userId      String
  jobs        Job[]
  contactInfo ContactInfo?
}

model Job {
  slug      String   @unique
  code      String
  title     String
  body      String
  open      Boolean  @default(true)
  bannerUrl String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  location     Location @relation(fields: [locationSlug], references: [slug], onDelete: Cascade, onUpdate: Cascade)
  locationSlug String
  team         Team     @relation(fields: [teamSlug], references: [slug], onDelete: Cascade, onUpdate: Cascade)
  teamSlug     String
  org          Org      @relation(fields: [orgSlug], references: [slug], onDelete: Cascade, onUpdate: Cascade)
  orgSlug      String
}

model Location {
  slug    String  @unique
  city    String
  country String
  remote  Boolean @default(false)
  jobs    Job[]
}

model Category {
  slug  String @unique
  name  String
  teams Team[]
}

model Team {
  slug String @unique

  category     Category @relation(fields: [categorySlug], references: [slug], onDelete: Cascade, onUpdate: Cascade)
  categorySlug String
  jobs         Job[]

  name String
}

model ContactInfo {
  id        String   @id @unique @default(cuid())
  phone     String?
  address   String?
  city      String?
  state     String?
  zip       String?
  country   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  org       Org      @relation(fields: [orgSlug], references: [slug], onDelete: Cascade, onUpdate: Cascade)
  orgSlug   String   @unique
}
